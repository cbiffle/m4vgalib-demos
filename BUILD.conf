install('cobble.target.c')
install('compile_stl')

################################################################################
# Compiler settings

warnings = [
  'all',
  'error',

  'cast-align',
  'cast-qual',
  #'conversion',
  'missing-declarations',
  'missing-field-initializers',
  'pointer-arith',
  'redundant-decls',
  'sign-compare',
  'switch-enum',
  'undef',

  # These warnings are valid in GCC 4.8.
  'sizeof-pointer-memaccess',
  'zero-as-null-pointer-constant',
  'no-maybe-uninitialized',
]

codegen = [
  'no-common',
  'omit-frame-pointer',
  'function-sections',
  'data-sections',
  'no-exceptions',
]

common_c_flags = ['-W' + w for w in warnings] + \
                 ['-f' + f for f in codegen] + \
                 [ '-Os', '-I %(ROOT)s' ]

environment('base', contents = {
  'c_flags': common_c_flags,
  'cxx_flags': common_c_flags + [
    '-std=gnu++11',
    '-fno-rtti',
    '-Wreorder',
    '-Woverloaded-virtual',
    '-Wsign-promo',
  ],

  #'c_library_archive_products': False,
})

################################################################################
# Target (embedded) environment

target_c_flags = [
  '-mcpu=cortex-m4',
  '-mthumb',
  '-mfloat-abi=hard',
  '-mfpu=fpv4-sp-d16',
  '-mfp16-format=ieee',
]

environment('target', base = 'base', contents = {
  'cc': 'arm-none-eabi-gcc',
  'cxx': 'arm-none-eabi-g++',
  'aspp': 'arm-none-eabi-gcc',
  'ar': 'arm-none-eabi-ar',

  'c_flags': target_c_flags,
  'cxx_flags': target_c_flags,
  'aspp_flags': target_c_flags,
  'link_flags': target_c_flags + [
    '-Wl,--gc-sections',
    '-T%(ROOT)s/m4vga-stm32f4xx.ld',
  ],
})

# Several of the demos avoid using *any* toolchain code.
environment('target-standalone', base = 'target', contents = {
  'link_flags': [ '-nostdlib', '-nodefaultlibs' ],
  'cxx_flags': [ '-ffreestanding' ],
  # For completeness, not that we have any C.
  'c_flags': [ '-ffreestanding' ],
})


################################################################################
# DAG

demos = [
  'blt',
  'conway',
  'hires_text',
  'hires_mix',
  'horiz_tp',
  'i2s',
  'midres_graphics',
  'rook',
  'serial',
  'tunnel',
  'xor_pattern',
]
for demo in demos:
  seed('//demo/%s' % demo)

seed('//reel')
